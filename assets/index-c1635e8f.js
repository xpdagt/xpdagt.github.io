import{u as C,r as g,ad as R,t as J,ae as Z,af as U,ag as D,a5 as X,ah as K,l as z,A as B,z as tt,ai as et,aj as V,G as nt,H as at,g as st,N as it,ak as Y,al as ut,am as rt,an as W,ao as ot,ap as pt,aq as x,ar as G,as as lt,j as M,T as yt,at as Q,au as F,B as mt,s as ct}from"./index-201afa5f.js";import{S as dt,T as Tt,F as E,u as ft,P as j,c as bt,a as It,R as At}from"./usePools-183a4c92.js";import{u as Et}from"./useTransactionDeadline-c5bbcb75.js";import{f as H}from"./formatCurrencyAmount-7f40941a.js";const gt=[{inputs:[{internalType:"address",name:"_factory",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"afterSqrtPList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"feeUnits",type:"uint24"},{internalType:"uint160",name:"limitSqrtP",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactInputSingleParams",name:"params",type:"tuple"}],name:"quoteExactInputSingle",outputs:[{components:[{internalType:"uint256",name:"usedAmount",type:"uint256"},{internalType:"uint256",name:"returnedAmount",type:"uint256"},{internalType:"uint160",name:"afterSqrtP",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],internalType:"struct IQuoterV2.QuoteOutput",name:"output",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160[]",name:"afterSqrtPList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"feeUnits",type:"uint24"},{internalType:"uint160",name:"limitSqrtP",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactOutputSingleParams",name:"params",type:"tuple"}],name:"quoteExactOutputSingle",outputs:[{components:[{internalType:"uint256",name:"usedAmount",type:"uint256"},{internalType:"uint256",name:"returnedAmount",type:"uint256"},{internalType:"uint160",name:"afterSqrtP",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],internalType:"struct IQuoterV2.QuoteOutput",name:"output",type:"tuple"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"path",type:"bytes"}],name:"swapCallback",outputs:[],stateMutability:"view",type:"function"}],ht=[{inputs:[{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_WETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"WETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"refundEth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"deltaQty0",type:"int256"},{internalType:"int256",name:"deltaQty1",type:"int256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minAmountOut",type:"uint256"}],internalType:"struct IRouter.ExactInputParams",name:"params",type:"tuple"}],name:"swapExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"minAmountOut",type:"uint256"},{internalType:"uint160",name:"limitSqrtP",type:"uint160"}],internalType:"struct IRouter.ExactInputSingleParams",name:"params",type:"tuple"}],name:"swapExactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"maxAmountIn",type:"uint256"}],internalType:"struct IRouter.ExactOutputParams",name:"params",type:"tuple"}],name:"swapExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"maxAmountIn",type:"uint256"},{internalType:"uint160",name:"limitSqrtP",type:"uint160"}],internalType:"struct IRouter.ExactOutputSingleParams",name:"params",type:"tuple"}],name:"swapExactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"transferAllTokens",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeUnits",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"transferAllTokensWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"unwrapWeth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeUnits",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWethWithFee",outputs:[],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];var S;(function(t){t[t.LOADING=0]="LOADING",t[t.INVALID=1]="INVALID",t[t.NO_ROUTE_FOUND=2]="NO_ROUTE_FOUND",t[t.VALID=3]="VALID",t[t.SYNCING=4]="SYNCING"})(S||(S={}));function wt(t,e,a){const{networkInfo:c}=C(),[i,p]=g.useMemo(()=>t===R.EXACT_INPUT?[e==null?void 0:e.currency,a]:[a,e==null?void 0:e.currency],[t,e,a]),{routes:s,loading:u}=Ot(i,p),T=J(c.elastic.quoter,gt),d=Z(T,e?s.map(n=>dt.quoteCallParameters(n,e,t).calldata):[],{gasRequired:2e6});return g.useMemo(()=>{if(!e||!i||!p||d.some(({valid:l})=>!l)||(t===R.EXACT_INPUT?e.currency.equals(p):e.currency.equals(i)))return{state:1,trade:void 0};if(u||d.some(({loading:l})=>l))return{state:0,trade:void 0};const{bestRoute:n,amountIn:o,amountOut:y}=d.reduce((l,{result:r},m)=>{if(!r||!r[0])return l;const I=r[0];if(!r[0])return l;if(t===R.EXACT_INPUT){const f=U.fromRawAmount(p,I.returnedAmount.toString());if(l.amountOut===null||D.lessThan(l.amountOut.quotient,f.quotient))return{bestRoute:s[m],amountIn:e,amountOut:f}}else{const f=U.fromRawAmount(i,I.returnedAmount.toString());if(l.amountIn===null||D.greaterThan(l.amountIn.quotient,f.quotient))return{bestRoute:s[m],amountIn:f,amountOut:e}}return l},{bestRoute:null,amountIn:null,amountOut:null});return!n||!o||!y?{state:2,trade:void 0}:{state:3,trade:Tt.createUncheckedTrade({route:n,inputAmount:o,outputAmount:y,tradeType:t})}},[e,i,p,d,s,u,t])}function Ct(t,e){return t===e||t.token0.equals(e.token0)&&t.token1.equals(e.token1)&&t.fee===e.fee}function $(t,e,a,c,i=[],p=[],s=t,u=2){const T=t==null?void 0:t.wrapped,d=e==null?void 0:e.wrapped;if(!T||!d)throw new Error("Missing tokenIn/tokenOut");for(const n of a){if(!n.involvesToken(T)||i.find(y=>Ct(n,y)))continue;const o=n.token0.equals(T)?n.token1:n.token0;o.equals(d)?p.push(new At([...i,n],s,e)):u>1&&$(o,e,a,c,[...i,n],p,s,u-1)}return p}function Ot(t,e){const{chainId:a}=C(),{pools:c,loading:i}=Pt(t,e);return g.useMemo(()=>i||!a||!c||!t||!e?{loading:!0,routes:[]}:{loading:!1,routes:$(t,e,c,a,[],[],t,1)},[a,t,e,c,i])}function Pt(t,e){const{networkInfo:a}=C(),[c]=X(),i=c.get("pool"),p=K(t,e),s=g.useMemo(()=>p.reduce((n,[o,y])=>n.concat([[o,y,E.RARE],[o,y,E.EXOTIC],[o,y,E.STABLE],[o,y,E.VOLATILE],[o,y,E.MOST_PAIR],[o,y,E.MOST_PAIR1],[o,y,E.MOST_PAIR2],[o,y,E.VERY_STABLE],[o,y,E.VERY_STABLE1],[o,y,E.VERY_STABLE2]]),[]),[p]),u=ft(s),T=a.elastic.initCodeHash,d=a.elastic.coreFactory;return g.useMemo(()=>({pools:u.filter(n=>n[0]===j.EXISTS&&n[1]!==null).filter(n=>{if(i){const o=n[1];return bt({factoryAddress:d,tokenA:o.token0,tokenB:o.token1,fee:o.fee,initCodeHashManualOverride:T}).toLowerCase()===i.toLowerCase()}else return!0}).map(([,n])=>n),loading:u.some(([n])=>n===j.LOADING)}),[u,i,T,d])}function Mt(t,e=Y){const{account:a,chainId:c}=C(),{library:i}=z(),p=Rt(t,e),s=B(),u=tt();return g.useMemo(()=>!t||!i||!a||!c?{callback:null,error:"Missing dependencies"}:{callback:async function(){const d=await Promise.all(p.map(r=>{const{address:m,calldata:I,value:f}=r,w=!f||V(f)?{from:a,to:m,data:I}:{from:a,to:m,data:I,value:f};return i.estimateGas(w).then(A=>({call:r,gasEstimate:A})).catch(A=>(console.debug("Gas estimate failed, trying eth_call to extract error",r),i.call(w).then(b=>(console.debug("Unexpected successful call after failed estimate gas",r,A,b),{call:r,error:new Error("Unexpected issue with estimating the gas. Please try again.")})).catch(b=>{console.debug("Call threw error",r,b);let O;switch(b.message){case"execution reverted: DmmExchangeRouter: INSUFFICIENT_OUTPUT_AMOUNT":case"execution reverted: DmmExchangeRouter: EXCESSIVE_INPUT_AMOUNT":O="This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.";break;default:O=`The transaction cannot succeed due to error: ${b.message}. This is probably an issue with one of the tokens you are swapping.`}return{call:r,error:new Error(O)}})))})),n=d.find((r,m,I)=>"gasEstimate"in r&&(m===I.length-1||"gasEstimate"in I[m+1]));if(!n){const r=d.filter(m=>"error"in m);throw r.length>0?r[r.length-1].error:new Error("Unexpected error. Please contact support: none of the calls threw an error")}const{call:{address:o,calldata:y,value:l}}=n;return i.getSigner().sendTransaction({from:a,to:o,data:y,..."gasEstimate"in n?{gasLimit:et(n.gasEstimate)}:{},...l&&!V(l)?{value:l}:{}}).then(r=>{const m=t.inputAmount.currency.symbol,I=t.outputAmount.currency.symbol,f=H(t.inputAmount,6),w=H(t.outputAmount,6),A=`${f} ${m} for ${w} ${I}`;return s({...r,type:nt.SWAP,hash:r.hash,summary:A}),r.hash}).catch(r=>{const m=at(r);console.error("Swap error:",{message:m,error:r}),u({title:st._({id:"sIE6mW"}),summary:m,type:it.ERROR},8e3)})},error:null},[t,i,a,c,p,s,u])}function Rt(t,e=Y){const{account:a,chainId:c,networkInfo:i}=C(),{library:p}=z(),s=Et();return g.useMemo(()=>{if(!t||!a||!p||!a||!c||!s)return[];const u=ut(i.elastic.routers,ht,p,a);if(!u)return[];const T={recipient:a,slippageTolerance:rt(e),deadline:s.toString()},{value:d,calldata:n}=It.swapCallParameters([t],T);return[{address:u.address,calldata:n,value:d}]},[i,e,c,s,p,a,t])}const xt=ct.div`
  background: ${({theme:t})=>t.background};
  max-width: 392px;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  margin-top: 1.5rem;
  border-radius: 1rem;
`;function Lt(){var N,v,k,L,_,q;const{networkInfo:t,chainId:e}=C(),[a,c]=X(),i=(a.get("inputCurrency")||"").toLowerCase(),p=(a.get("outputCurrency")||"").toLowerCase(),s=W(i),u=W(p),[T,d]=g.useState(""),[n,o]=g.useState(!0),y=u&&s&&T?ot(T,(n?s:u)??void 0):void 0,l=wt(n?R.EXACT_INPUT:R.EXACT_OUTPUT,y,(n?u:s)??void 0),{callback:r}=Mt(l.trade),[m,I]=pt((N=l.trade)==null?void 0:N.inputAmount,t.elastic.routers),f=l.state===S.LOADING||m===x.PENDING,w=g.useMemo(()=>[s!=null&&s.isNative?G[e]:s==null?void 0:s.wrapped,u!=null&&u.isNative?G[e]:u==null?void 0:u.wrapped],[s,u,e]),A=lt(w);let b="";A!=null&&A[0]&&((v=l.trade)!=null&&v.inputAmount)&&A[0].lessThan(l.trade.inputAmount)?b="Insufficient balance":!s||!u?b="Select Token":T?b="":b="Input amount";const O=()=>{f||b||(m===x.NOT_APPROVED?I():r==null||r())};return M.jsxs(xt,{children:[M.jsx(yt,{fontSize:20,fontWeight:"500",children:"ElasticSwap"}),M.jsx(Q,{positionMax:"top",id:"elastic-swap-input-currency",value:n?T:((L=(k=l.trade)==null?void 0:k.inputAmount)==null?void 0:L.toExact())||"",onMax:()=>{},onHalf:()=>{},onUserInput:h=>{o(!0),d(h)},onCurrencySelect:h=>{const P=(h.isNative?F:h.address).toLowerCase();P===p&&a.set("outputCurrency",i),a.set("inputCurrency",P),c(a)},currency:s,otherCurrency:u,showCommonBases:!0}),M.jsx(Q,{positionMax:"top",id:"elastic-swap-output-currency",value:n?((q=(_=l.trade)==null?void 0:_.outputAmount)==null?void 0:q.toExact())||"":T,onMax:()=>{},onHalf:()=>{},onUserInput:h=>{o(!1),d(h)},onCurrencySelect:h=>{const P=(h.isNative?F:h.address).toLowerCase();P===i&&a.set("inputCurrency",p),a.set("outputCurrency",P),c(a)},currency:u,otherCurrency:s,showCommonBases:!0}),M.jsx(mt,{disabled:f||!!b,onClick:O,children:f?"Loading...":b||(m===x.NOT_APPROVED?"Approve":"Swap")})]})}export{Lt as default};
